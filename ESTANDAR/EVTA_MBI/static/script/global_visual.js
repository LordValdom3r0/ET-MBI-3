const estacion = sessionStorage.getItem('estacion');
let DBEVENT = sessionStorage.getItem('DBEVENT');
var edit_id = sessionStorage.getItem('edit_vision_id');
console.log("DB EVENT ACTUAL: ", DBEVENT, "ESTACION:", estacion);

// FAMX2
var imgWidth_pdce, imgHeight_pdce, datosPrim_pdce;
var imgWidth_pdce_amg, imgHeight_pdce_amg, datosPrim_pdce_amg;
var imgWidth_pdcs1, imgHeight_pdcs1, datosPrim_pdcs1;


var color = "vacio";
var color_style = "blue"; //valor por default para las visuales
let caja, ctgry, modularity;
let hold_config;


const tipoArnes = estacion.includes('MBM')? 'motor':'interior';

var tipo = ""; // valor para colorear sea siendo el tipo de terminal sea

///////////   VISIÓN CANVAS   ///////////
// FAMX-2
let img_pdce = document.getElementById("pdce_image_v_canvas");
let img_pdce_amg = document.getElementById("pdce_amg_image_v_canvas");
let img_pdcs1 = document.getElementById("pdcs1_image_v_canvas");

const PDC = estacion.includes('MBM')? 'PDC-E' : 'PDC-R'; 

//Fuses_bb es para dimensionar el tamaño del fusible seleccionado dentro de la caja 
                                    /*[x-LADO IZQ ←,Y-LADO SUPERIOR ↑][X-LADO DER →,Y-LADO INFERIOR ↓]*/
var fuses_BB = {
    'PDC-D': {
        'F200': [[271, 573], [301, 584]], 'F201': [[271, 556], [301, 567]], 'F202': [[271, 539], [301, 550]], 'F203': [[271, 522], [301, 533]], 
        'F204': [[271, 504], [301, 516]], 'F205': [[271, 487], [301, 498]], 'F206': [[271, 470], [301, 481]], 'F207': [[271, 453], [301, 464]], 
        'F208': [[271, 436], [301, 447]], 'F209': [[367, 573], [417, 584]], 'F210': [[367, 556], [417, 568]], 'F211': [[367, 539], [417, 551]], 
        'F212': [[367, 522], [417, 534]], 'F213': [[367, 505], [417, 517]], 'F214': [[367, 487], [417, 499]], 'F215': [[367, 469], [417, 481]], 
        'F216': [[367, 452], [417, 464]], 'F217': [[291, 402], [319, 414]], 'F218': [[291, 385], [319, 396]], 'F219': [[291, 367], [319, 379]], 
        'F220': [[291, 350], [319, 361]], 'F221': [[291, 333], [319, 344]], 'F222': [[329, 402], [356, 414]], 'F223': [[329, 385], [356, 396]], 
        'F224': [[329, 367], [356, 379]], 'F225': [[329, 350], [356, 361]], 'F226': [[329, 333], [356, 344]], 'F227': [[375, 419], [406, 430]], 
        'F228': [[375, 402], [406, 414]], 'F229': [[375, 385], [406, 396]], 'F230': [[375, 367], [406, 379]], 'F231': [[375, 350], [406, 361]], 
        'F232': [[375, 333], [406, 344]]
    }, 
    'PDC-P': {
        'MF1':  [[279, 276], [369, 288]], 'MF2' : [[279, 295], [369, 307]], 'F300': [[282, 395], [326, 408]], 'F301': [[289, 380], [315, 390]], 
        'F302': [[289, 365], [314, 375]], 'F303': [[292, 350], [314, 361]], 'F304': [[291, 335], [315, 347]], 'F305': [[292, 322], [314, 331]], 
        'F318': [[341, 428], [365, 437]], 'F319': [[342, 415], [366, 423]], 'F320': [[343, 400], [365, 408]], 'F321': [[342, 384], [367, 393]], 
        'F322': [[344, 368], [366, 379]], 'F323': [[342, 354], [366, 364]], 'F324': [[344, 340], [366, 348]], 'F325': [[343, 326], [368, 335]], 
        'F326': [[378, 427], [422, 438]], 'F327': [[379, 413], [422, 425]], 'F328': [[379, 398], [423, 409]], 'F329': [[380, 384], [424, 395]], 
        'F330': [[380, 369], [422, 380]], 'F331': [[380, 354], [422, 364]], 'F332': [[381, 339], [422, 349]], 'F333': [[380, 324], [422, 335]], 
        'F334': [[380, 309], [422, 319]], 'F335': [[380, 294], [422, 307]], 'E21' : [[287, 423], [295, 441]], 'E22' : [[295, 442], [302, 460]]
    }, 
    'PDC-R': {           
        'F400': [[510, 214], [519, 246]], 'F401': [[499, 214], [508, 246]], 'F402': [[487, 214], [497, 246]], 'F403': [[477, 214], [485, 246]], 
        'F404': [[467, 214], [475, 246]], 'F405': [[455, 214], [464, 246]], 'F411': [[385, 220], [392, 241]], 'F410': [[395, 220], [402, 241]], 
        'F409': [[403, 220], [412, 241]], 'F408': [[414, 220], [421, 241]], 'F407': [[423, 220], [432, 241]], 'F406': [[434, 220], [443, 241]], 
        'F412': [[527, 222], [558, 231]], 'F413': [[527, 211], [558, 220]], 'F414': [[527, 204], [558, 213]], 'F415': [[527, 193], [558, 202]], 
        'F416': [[527, 182], [558, 191]], 'F417': [[527, 171], [558, 180]], 'F420': [[326, 171], [374, 186]], 'F419': [[326, 195], [374, 210]], 
        'F418': [[326, 217], [374, 232]], 'F421': [[527, 144], [558, 153]], 'F422': [[527, 133], [558, 142]], 'F423': [[527, 122], [558, 131]], 
        'F424': [[527, 111], [558, 120]], 'F425': [[527, 102], [558, 111]], 'F426': [[527, 91],  [558, 100]], 'F427': [[495, 133], [504, 153]], 
        'F428': [[485, 133], [494, 153]], 'F429': [[475, 133], [484, 153]], 'F430': [[465, 133], [474, 153]], 'F431': [[453, 133], [462, 153]], 
        'F437': [[496, 111], [505, 130]], 'F438': [[487, 111], [495, 130]], 'F439': [[476, 111], [485, 130]], 'F440': [[465, 111], [474, 130]], 
        'F441': [[455, 111], [464, 130]], 'F432': [[432, 133], [441, 153]], 'F433': [[421, 133], [430, 153]], 'F434': [[410, 133], [419, 153]], 
        'F435': [[399, 133], [408, 153]], 'F436': [[388, 133], [397, 153]], 'F442': [[431, 111], [440, 130]], 'F443': [[420, 111], [429, 130]], 
        'F444': [[410, 111], [419, 129]], 'F445': [[399, 111], [408, 130]], 'F446': [[389, 111], [398, 130]], 'F449': [[326, 88],  [374, 104]], 
        'F448': [[326, 112], [374, 128]], 'F447': [[326, 137], [374, 153]], 'F450': [[512, 72],  [521, 103]], 'F451': [[501, 72],  [510, 103]], 
        'F452': [[490, 72],  [499, 103]], 'F453': [[479, 72],  [488, 103]], 'F454': [[469, 72],  [478, 103]], 'F455': [[458, 72],  [467, 103]], 
        'F456': [[435, 72],  [444, 103]], 'F457': [[424, 72],  [433, 103]], 'F458': [[413, 72],  [422, 103]], 'F459': [[402, 72],  [411, 103]], 
        'F460': [[391, 72],  [400, 103]], 'F461': [[380, 72],  [389, 103]], 'F462': [[240, 166], [256, 215]], 'F463': [[215, 166], [231, 215]], 
        'F464': [[191, 166], [207, 215]], 'F465': [[277, 107], [297, 115]], 'F466': [[277, 97],  [297, 105]], 'F467': [[277, 86],  [297, 94]], 
        'F468': [[277, 75],  [297, 83]],  'F469': [[277, 64],  [297, 72]],  'F470': [[277, 53],  [297, 61]],  'F471': [[231, 107], [264, 115]], 
        'F472': [[231, 97],  [264, 105]], 'F473': [[231, 86],  [264, 94]],  'F474': [[231, 75],  [264, 83]],  'F475': [[231, 64],  [264, 72]], 
        'F476': [[231, 53],  [264, 61]],  'F477': [[187, 107], [220, 115]], 'F478': [[187, 97],  [220, 105]], 'F479': [[187, 86],  [220, 94]], 
        'F480': [[187, 75],  [220, 83]],  'F481': [[187, 64],  [220, 71]],  'F482': [[187, 53],  [220, 61]],  'RELX': [[478, 162], [525, 206]], 
        'RELU': [[427, 162], [476, 206]], 'RELT': [[378, 162], [425, 206]]
    },                                                 
    'PDC-RMID': {
        'F400': [[613, 350], [627, 388]], 'F401': [[601, 350], [612, 388]], 'F402': [[587, 350], [599, 388]], 'F403': [[577, 350], [588, 388]], 
        'F404': [[565, 350], [576, 388]], 'F405': [[553, 350], [564, 388]], 'F411': [[463, 357], [474, 378]], 'F410': [[475, 357], [486, 378]], 
        'F409': [[487, 357], [496, 378]], 'F408': [[497, 357], [510, 378]], 'F407': [[512, 357], [523, 378]], 'F406': [[525, 357], [534, 378]], 
        'F412': [[633, 360], [673, 371]], 'F413': [[633, 348], [673, 359]], 'F414': [[633, 335], [673, 346]], 'F415': [[633, 323], [673, 334]], 
        'F416': [[633, 311], [673, 322]], 'F417': [[633, 297], [673, 308]], 'F420': [[398, 300], [455, 318]], 'F419': [[398, 330], [455, 348]], 
        'F418': [[398, 358], [455, 376]], 'F421': [[634, 272], [671, 284]], 'F422': [[634, 256], [671, 269]], 'F423': [[634, 244], [671, 255]], 
        'F424': [[634, 229], [671, 241]], 'F425': [[634, 217], [671, 228]], 'F426': [[634, 204], [671, 216]], 'F427': [[597, 256], [607, 280]], 
        'F428': [[585, 256], [595, 280]], 'F429': [[573, 256], [583, 280]], 'F430': [[561, 256], [571, 280]], 'F431': [[547, 256], [557, 280]], 
        'F437': [[600, 228], [610, 252]], 'F438': [[587, 228], [597, 252]], 'F439': [[575, 228], [585, 252]], 'F440': [[563, 228], [573, 252]], 
        'F441': [[550, 228], [560, 252]], 'F432': [[520, 256], [530, 280]], 'F433': [[508, 256], [518, 280]], 'F434': [[496, 256], [506, 280]], 
        'F435': [[484, 256], [494, 280]], 'F436': [[472, 256], [482, 280]], 'F442': [[518, 228], [528, 252]], 'F443': [[506, 228], [516, 252]], 
        'F444': [[494, 228], [504, 252]], 'F445': [[481, 228], [491, 252]], 'F446': [[469, 228], [479, 252]], 'F450': [[616, 180], [628, 218]], 
        'F451': [[604, 180], [615, 218]], 'F452': [[592, 180], [602, 218]], 'F453': [[577, 180], [589, 218]], 'F454': [[564, 180], [576, 218]], 
        'F455': [[553, 180], [563, 218]], 'F456': [[525, 180], [535, 218]], 'F457': [[514, 180], [524, 218]], 'F458': [[500, 180], [513, 218]], 
        'F459': [[487, 180], [497, 218]], 'F460': [[473, 180], [486, 218]], 'F461': [[463, 180], [474, 218]], 'RELX': [[578, 291], [629, 348]], 
        'RELU': [[517, 291], [573, 348]], 'RELT': [[461, 291], [512, 348]], 'F449': [[398, 206], [455, 224]], 'F448': [[398, 232], [455, 250]], 
        'F447': [[398, 260], [455, 278]]
    },
    'PDC-RS': {
        'F400': [[613, 350], [627, 388]], 'F401': [[601, 350], [612, 388]], 'F402': [[587, 350], [599, 388]], 'F403': [[577, 350], [588, 388]], 
        'F404': [[565, 350], [576, 388]], 'F405': [[553, 350], [564, 388]], 'F411': [[463, 357], [474, 378]], 'F410': [[475, 357], [486, 378]], 
        'F409': [[487, 357], [496, 378]], 'F408': [[497, 357], [510, 378]], 'F407': [[512, 357], [523, 378]], 'F406': [[525, 357], [534, 378]], 
        'F412': [[633, 360], [673, 371]], 'F413': [[633, 348], [673, 359]], 'F414': [[633, 335], [673, 346]], 'F415': [[633, 323], [673, 334]], 
        'F416': [[633, 311], [673, 322]], 'F417': [[633, 297], [673, 308]], 'F420': [[398, 300], [455, 318]], 'F419': [[398, 330], [455, 348]], 
        'F418': [[398, 358], [455, 376]], 'F421': [[634, 272], [671, 284]], 'F422': [[634, 256], [671, 269]], 'F423': [[634, 244], [671, 255]], 
        'F424': [[634, 229], [671, 241]], 'F425': [[634, 217], [671, 228]], 'F426': [[634, 204], [671, 216]], 'F427': [[597, 256], [607, 280]], 
        'F428': [[585, 256], [595, 280]], 'F429': [[573, 256], [583, 280]], 'F430': [[561, 256], [571, 280]], 'F431': [[547, 256], [557, 280]], 
        'F437': [[600, 228], [610, 252]], 'F438': [[587, 228], [597, 252]], 'F439': [[575, 228], [585, 252]], 'F440': [[563, 228], [573, 252]], 
        'F441': [[550, 228], [560, 252]], 'F432': [[520, 256], [530, 280]], 'F433': [[508, 256], [518, 280]], 'F434': [[496, 256], [506, 280]], 
        'F435': [[484, 256], [494, 280]], 'F436': [[472, 256], [482, 280]], 'F442': [[518, 228], [528, 252]], 'F443': [[506, 228], [516, 252]], 
        'F444': [[494, 228], [504, 252]], 'F445': [[481, 228], [491, 252]], 'F446': [[469, 228], [479, 252]], 'F450': [[616, 180], [628, 218]], 
        'F451': [[604, 180], [615, 218]], 'F452': [[592, 180], [602, 218]], 'F453': [[577, 180], [589, 218]], 'F454': [[564, 180], [576, 218]], 
        'F455': [[553, 180], [563, 218]], 'F456': [[525, 180], [535, 218]], 'F457': [[514, 180], [524, 218]], 'F458': [[500, 180], [513, 218]], 
        'F459': [[487, 180], [497, 218]], 'F460': [[473, 180], [486, 218]], 'F461': [[463, 180], [474, 218]], 'RELX': [[578, 291], [629, 348]], 
        'RELU': [[517, 291], [573, 348]], 'RELT': [[461, 291], [512, 348]], 'F449': [[398, 206], [455, 224]], 'F448': [[398, 232], [455, 250]], 
        'F447': [[398, 260], [455, 278]]
    },
    'F96': {
        'F96': [[257, 346], [480, 417]]
    },
    'PDC-S': {
        '1': [[439, 218], [486, 392]], '2': [[494, 218], [540, 392]], '3': [[550, 218], [596, 392]], '4': [[607, 219], [653, 392]], 
        '5': [[661, 218], [711, 392]], '6': [[719, 218], [763, 392]]
    }, 
    'TBLU': {
        '9': [[81, 531], [118, 600]], '8': [[124, 531], [161, 600]], '7': [[169, 531], [206, 600]], '6': [[213, 531], [250, 600]], 
        '5': [[258, 531], [296, 600]], '4': [[303, 531], [341, 600]], '3': [[347, 531], [385, 600]], '2': [[392, 531], [429, 600]], 
        '1': [[435, 531], [472, 600]]
    },
    'PDC-E': {
        // 'A1-2': [[284, 349], [295, 359]],'A1-3': [[283, 366], [295, 375]],'A2-1': [[511, 333], [530, 340]],'A2-2': [[568, 340], [576, 349]],'A2-5': [[566, 373], [580, 385]],
        'F100': [[282, 187], [294, 226]],'F101': [[297, 187], [308, 226]],'F102': [[309, 187], [321, 226]],'F103': [[322, 187], [333, 226]],'F104': [[334, 187], [347, 226]],
        'F105': [[350, 187], [360, 226]],'F106': [[388, 187], [401, 226]],'F107': [[401, 187], [412, 226]],'F108': [[414, 187], [426, 226]],'F109': [[429, 187], [439, 226]],
        'F110': [[442, 187], [451, 226]],'F111': [[454, 187], [467, 226]],'F112': [[495, 187], [506, 226]],'F113': [[509, 187], [519, 226]],'F114': [[522, 187], [533, 226]],
        'F115': [[535, 187], [547, 226]],'F116': [[548, 187], [558, 226]],'F117': [[561, 187], [572, 226]],'F118': [[252, 222], [274, 230]],'F119': [[252, 234], [274, 242]],
        'F120': [[252, 248], [274, 255]],'F121': [[252, 261], [274, 270]],'F122': [[252, 274], [274, 284]],'F123': [[252, 288], [274, 297]],'F124': [[586, 215], [610, 225]],
        'F124': [[586, 215], [610, 225]],'F127': [[586, 254], [610, 264]],'F128': [[586, 268], [610, 277]],'F129': [[586, 281], [610, 291]],'F136': [[443, 246], [466, 306]],'F139': [[533, 286], [541, 309]],
        'F140': [[545, 286], [555, 309]],'F141': [[559, 286], [567, 309]],'F142': [[572, 286], [580, 309]],'RELN': [[327, 235], [380, 291]],'RELR': [[385, 236], [440, 289]]
    },
    'PDC-E_AMG': {
        // 'A1-2': [[284, 349], [295, 359]],'A1-3': [[283, 366], [295, 375]],'A2-1': [[511, 333], [530, 340]],'A2-2': [[568, 340], [576, 349]],'A2-5': [[566, 373], [580, 385]],
        'F100': [[282, 187], [294, 226]],'F101': [[297, 187], [308, 226]],'F102': [[309, 187], [321, 226]],'F103': [[322, 187], [333, 226]],'F104': [[334, 187], [347, 226]],
        'F105': [[350, 187], [360, 226]],'F106': [[388, 187], [401, 226]],'F107': [[401, 187], [412, 226]],'F108': [[414, 187], [426, 226]],'F109': [[429, 187], [439, 226]],
        'F110': [[442, 187], [451, 226]],'F111': [[454, 187], [467, 226]],'F112': [[495, 187], [506, 226]],'F113': [[509, 187], [519, 226]],'F114': [[522, 187], [533, 226]],
        'F115': [[535, 187], [547, 226]],'F116': [[548, 187], [558, 226]],'F117': [[561, 187], [572, 226]],'F118': [[252, 222], [274, 230]],'F119': [[252, 234], [274, 242]],
        'F120': [[252, 248], [274, 255]],'F121': [[252, 261], [274, 270]],'F122': [[252, 274], [274, 284]],'F123': [[252, 288], [274, 297]],'F124': [[586, 215], [610, 225]],
        'F127': [[586, 254], [610, 264]],'F128': [[586, 268], [610, 277]],'F129': [[586, 281], [610, 291]],'F136': [[443, 246], [466, 306]],'F139': [[533, 286], [541, 309]],
        'F140': [[545, 286], [555, 309]],'F141': [[559, 286], [567, 309]],'F142': [[572, 286], [580, 309]],'F143': [[258, 354], [270, 390]],'F144': [[280, 349], [292, 385]],
        'F145': [[293, 349], [305, 385]],'F146': [[485, 320], [506, 382]],'F147': [[322, 352], [334, 388]],'RELI': [[425, 322], [483, 380]],'RELN': [[327, 235], [380, 291]],
        'RELQ': [[515, 328], [570, 386]],'RELR': [[385, 236], [440, 289]]
    },
    'PDC-S1': {
        'F200': [[271, 573], [301, 584]], 'F201': [[271, 556], [301, 567]], 'F202': [[271, 539], [301, 550]], 'F203': [[271, 522], [301, 533]], 
        'F204': [[271, 504], [301, 516]], 'F205': [[271, 487], [301, 498]], 'F206': [[271, 470], [301, 481]], 'F207': [[271, 453], [301, 464]], 
        'F208': [[271, 436], [301, 447]], 'F209': [[367, 573], [417, 584]], 'F210': [[367, 556], [417, 568]], 'F211': [[367, 539], [417, 551]], 
        'F212': [[367, 522], [417, 534]], 'F213': [[367, 505], [417, 517]], 'F214': [[367, 487], [417, 499]], 'F215': [[367, 469], [417, 481]], 
        'F216': [[367, 452], [417, 464]], 'F217': [[291, 402], [319, 414]], 'F218': [[291, 385], [319, 396]], 'F219': [[291, 367], [319, 379]], 
        'F220': [[291, 350], [319, 361]], 'F221': [[291, 333], [319, 344]], 'F222': [[329, 402], [356, 414]], 'F223': [[329, 385], [356, 396]], 
        'F224': [[329, 367], [356, 379]], 'F225': [[329, 350], [356, 361]], 'F226': [[329, 333], [356, 344]], 'F227': [[375, 419], [406, 430]], 
        'F228': [[375, 402], [406, 414]], 'F229': [[375, 385], [406, 396]], 'F230': [[375, 367], [406, 379]], 'F231': [[375, 350], [406, 361]], 
        'F232': [[375, 333], [406, 344]]
    },



    //Torques
    'PDC-D_torque':    { "E1": [[353, 460],[403, 510]]},
    'PDC-P_torque':    { "E1": [[356, 457],[401, 502]]},
    'PDC-R_torque':    { "E1": [[404, 325],[449, 370]]},
 'PDC-RMID_torque':    { "E1": [[404, 325],[449, 370]]},
   'PDC-RS_torque':    { "E1": [[404, 325],[449, 370]]},
   'MFB-P1_torque':    { 
                  'A47': [[264, 345],[314, 395]], 'A46': [[328, 345],[378, 395]], 'A45': [[384, 350],[434, 400]],
                  'A44': [[430, 350],[480, 400]], 'A43': [[475, 350],[515, 390]], 'A41': [[529, 345],[579, 395]],
                  'A42': [[594, 387],[634, 427]]
                },
    'MFB-S_torque':    {
                  "A52": [[306, 394],[366, 454]], "A53": [[376, 408],[421, 453]], "A54": [[425, 408],[470, 453]],
                  "A55": [[475, 408],[520, 453]], "A56": [[523, 408],[568, 453]], "A51": [[439, 260],[499, 320]]
                },
    'MFB-E_torque':    {
                  "E1":  [[300,130],[385,215]],  "A1": [[460,310],[545,395]],  "A2": [[140,310],[225,395]],
                  // "A21": [[286,470],[317,501]], "A22": [[337,470],[365,502]], "A23": [[384,470],[417,499]], 
                  // "A24": [[436,469],[467,501]], "A25": [[495,474],[538,517]], "A26": [[562,470],[598,501]], 
                  // "A27": [[612,471],[648,501]], "A28": [[662,471],[696,502]], "A29": [[710,471],[744,501]], 
                  // "A30": [[426,275],[473,316]], "A20": [[557,276],[600,321]]
                },
    'MFB-E_M_torque':    {
                  //"E1":  [[300,130],[385,215]],  "A1": [[460,310],[545,395]],  "A2": [[140,310],[225,395]],
                  "A21": [[286,470],[317,501]], "A22": [[337,470],[365,502]], "A23": [[384,470],[417,499]], 
                  "A24": [[436,469],[467,501]], "A25": [[495,474],[538,517]], "A26": [[562,470],[598,501]], 
                  "A27": [[612,471],[648,501]], "A28": [[662,471],[696,502]], "A29": [[710,471],[744,501]], 
                  "A30": [[426,275],[473,316]], "A20": [[557,276],[600,321]]
                },
   'MFB-P2_torque':   {
                  "A21": [[253, 462],[298, 507]], "A22": [[305, 462],[350, 507]], "A23": [[354, 462],[399, 507]],
                  "A24": [[406, 462],[451, 507]], "A25": [[462, 463],[524, 525]], "A26": [[532, 462],[577, 507]],
                  "A27": [[583, 462],[628, 507]], "A28": [[633, 462],[678, 507]], "A29": [[683, 462],[728, 507]],
                  "A30": [[391, 260],[453, 322]], "A20": [[526, 260],[588, 322]]
                },
                'MFB-S2_torque':    { 
                  'A47': [[264, 345],[314, 395]], 'A46': [[328, 345],[378, 395]], 'A45': [[384, 350],[434, 400]],
                  'A44': [[430, 350],[480, 400]], 'A43': [[475, 350],[515, 390]], 'A41': [[529, 345],[579, 395]],
                  'A42': [[594, 387],[634, 427]]
                },
  'BATTERY_torque':  {
                  "BT": [[84, 226],[159, 301]]
                },
'BATTERY-2_torque':  
                {
                  "BT": [[226, 136],[286, 190]]
                },
'BATTERY-3_torque':  
                {
                  "BT": [[206, 168],[290, 228]]
                },
      'PDC-E_torque':    {
                  "E1": [[532,321],[566,357]]
                },
	'PDC-E_AMG_torque':  {
                  "E1": [[532,321],[566,357]]
	              },
	'PDC-ECOVER_torque': {
		              "E1": [[279,137],[318,171]], "E2": [[581,134],[621,173]]
	              },
	'PDC-S1_torque':     {
		              "E1": [[360,491],[403,533]]
	              },
  'G11_torque':        {
		            "G11": [[380,584],[484,664]]
	              }

}

/* FUSES VALUE ES UN JSON PARA UBICAR LOS FUSIBLES SELECCIONADOS O TAMBIEN GUARDADOS QUE REPRESENTAN
LA CAVIDAD DONDE EL FUSIBLE FUE COLOCADO, ES TAN SOLO UNA GUIA PARA GUARDAR EL CONTENIDO
MAS NO EL FORMATO FINAL DE LA CAPTURA DE DATOS */
var fuses_value = {
    'PDC-R': {
        'F400': color, 'F401': color, 'F402': color, 'F403': color, 'F404': color, 'F405': color, 'F411': color, 'F410': color, 'F409': color, 
        'F408': color, 'F407': color, 'F406': color, 'F412': color, 'F413': color, 'F414': color, 'F415': color, 'F416': color, 'F417': color, 
        'F420': color, 'F419': color, 'F418': color, 'F421': color, 'F422': color, 'F423': color, 'F424': color, 'F425': color, 'F426': color, 
        'F427': color, 'F428': color, 'F429': color, 'F430': color, 'F431': color, 'F437': color, 'F438': color, 'F439': color, 'F440': color, 
        'F441': color, 'F432': color, 'F433': color, 'F434': color, 'F435': color, 'F436': color, 'F442': color, 'F443': color, 'F444': color, 
        'F445': color, 'F446': color, 'F449': color, 'F448': color, 'F447': color, 'F450': color, 'F451': color, 'F452': color, 'F453': color, 
        'F454': color, 'F455': color, 'F456': color, 'F457': color, 'F458': color, 'F459': color, 'F460': color, 'F461': color, 'F462': color, 
        'F463': color, 'F464': color, 'F465': color, 'F466': color, 'F467': color, 'F468': color, 'F469': color, 'F470': color, 'F471': color, 
        'F472': color, 'F473': color, 'F474': color, 'F475': color, 'F476': color, 'F477': color, 'F478': color, 'F479': color, 'F480': color, 
        'F481': color, 'F482': color, 'RELX': color, 'RELU': color, 'RELT': color, 'F96': color
    },
    'PDC-RMID': {
        'F400': color, 'F401': color, 'F402': color, 'F403': color, 
        'F404': color, 'F405': color, 'F411': color, 'F410': color, 
        'F409': color, 'F408': color, 'F407': color, 'F406': color, 
        'F412': color, 'F413': color, 'F414': color, 'F415': color, 
        'F416': color, 'F417': color, 'F420': color, 'F419': color, 
        'F418': color, 'F421': color, 'F422': color, 'F423': color, 
        'F424': color, 'F425': color, 'F426': color, 'F427': color, 
        'F428': color, 'F429': color, 'F430': color, 'F431': color, 
        'F437': color, 'F438': color, 'F439': color, 'F440': color, 
        'F441': color, 'F432': color, 'F433': color, 'F434': color, 
        'F435': color, 'F436': color, 'F442': color, 'F443': color, 
        'F444': color, 'F445': color, 'F446': color, 'F450': color, 
        'F451': color, 'F452': color, 'F453': color, 'F454': color, 
        'F455': color, 'F456': color, 'F457': color, 'F458': color, 
        'F459': color, 'F460': color, 'F461': color, 'RELX': color, 
        'RELU': color, 'RELT': color, 'F449': color, 'F448': color, 
        'F447': color, 'F96': color
    },
    'PDC-RS': {
        'F400': color, 'F401': color, 'F402': color, 'F403': color, 'F404': color, 'F405': color, 'F411': color, 'F410': color, 'F409': color, 
        'F408': color, 'F407': color, 'F406': color, 'F412': color, 'F413': color, 'F414': color, 'F415': color, 'F416': color, 'F417': color, 
        'F420': color, 'F419': color, 'F418': color, 'F421': color, 'F422': color, 'F423': color, 'F424': color, 'F425': color, 'F426': color, 
        'F427': color, 'F428': color, 'F429': color, 'F430': color, 'F431': color, 'F437': color, 'F438': color, 'F439': color, 'F440': color, 
        'F441': color, 'F432': color, 'F433': color, 'F434': color, 'F435': color, 'F436': color, 'F442': color, 'F443': color, 'F444': color, 
        'F445': color, 'F446': color, 'F450': color, 'F451': color, 'F452': color, 'F453': color, 'F454': color, 'F455': color, 'F456': color, 
        'F457': color, 'F458': color, 'F459': color, 'F460': color, 'F461': color, 'RELX': color, 'RELU': color, 'RELT': color, 'F449': color, 
        'F448': color, 'F447': color, 'F96': color
    },
    'PDC-P': {
        'MF1': color, 'MF2': color, 'F300': color, 'F301': color, 'F302': color, 'F303': color, 'F304': color, 'F305': color, 'F318': color, 
        'F319': color, 'F320': color, 'F321': color, 'F322': color, 'F323': color, 'F324': color, 'F325': color, 'F326': color, 'F327': color, 
        'F328': color, 'F329': color, 'F330': color, 'F331': color, 'F332': color, 'F333': color, 'F334': color, 'F335': color, 'E21': color, 
        'E22': color
    },
    'PDC-D': {
        'F200': color, 'F201': color, 'F202': color, 'F203': color, 'F204': color, 'F205': color, 'F206': color, 'F207': color, 'F208': color, 
        'F209': color, 'F210': color, 'F211': color, 'F212': color, 'F213': color, 'F214': color, 'F215': color, 'F216': color, 'F217': color, 
        'F218': color, 'F219': color, 'F220': color, 'F221': color, 'F222': color, 'F223': color, 'F224': color, 'F225': color, 'F226': color, 
        'F227': color, 'F228': color, 'F229': color, 'F230': color, 'F231': color, 'F232': color
    },
    'PDC-S': {
        '1': color, '2': color, '3': color, '4': color, '5': color, '6': color
    }, 
    'TBLU': {
        '9': color, '8': color, '7': color, '6': color, '5': color, '4': color, '3': color, '2': color, '1': color
    },
    'F96': {
        'F96': color
    },
    'PDC-E': {
        /* 'A1-2': "CONN",'A1-3': "CONN",'A2-1': "CONN",'A2-2': "CONN",'A2-5': "CONN", */'F100': color,'F101': color,'F102': color,'F103': color,'F104': color,
        'F105': color,'F106': color,'F107': color,'F108': color,'F109': color,'F110': color,'F111': color,'F112': color,'F113': color,'F114': color,
        'F115': color,'F116': color,'F117': color,'F118': color,'F119': color,'F120': color,'F121': color,'F122': color,'F123': color,'F124': color,
        'F125': color,'F126': color,'F127': color,'F128': color,'F129': color,'F130': color,'F131': color,'F132': color,'F133': color,'F134': color,
        'F135': color,'F136': color,'F137': color,'F138': color,'F139': color,'F140': color,'F141': color,'F142': color,'RELN': color,'RELR': color
    },
    'PDC-E_AMG': {
        /* 'A1-2': "CONN",'A1-3': "CONN",'A2-1': "CONN",'A2-2': "CONN",'A2-5': "CONN", */'F100': color,'F101': color,'F102': color,'F103': color,'F104': color,
        'F105': color,'F106': color,'F107': color,'F108': color,'F109': color,'F110': color,'F111': color,'F112': color,'F113': color,'F114': color,
        'F115': color,'F116': color,'F117': color,'F118': color,'F119': color,'F120': color,'F121': color,'F122': color,'F123': color,'F124': color,
        // F125 Y F126 no existen fisicamente
        'F125': color,'F126': color,'F127': color,'F128': color,'F129': color,'F130': color,'F131': color,'F132': color,'F133': color,'F134': color,
        'F135': color,'F136': color,'F137': color,'F138': color,'F139': color,'F140': color,'F141': color,'F142': color,'F143': color,'F144': color,
        'F145': color,'F146': color,'F147': color,'RELI': color,'RELN': color,'RELQ': color,'RELR': color
    },
    'PDC-S1': {
        'F200': color, 'F201': color, 'F202': color, 'F203': color, 'F204': color, 'F205': color, 'F206': color, 'F207': color, 'F208': color, 
        'F209': color,  'F210': color,  'F211': color, 'F212': color, 'F213': color, 'F214': color, 'F215': color, 'F216': color, 'F217': color, 
        'F218': color, 'F219': color, 'F220': color, 'F221': color, 'F222': color, 'F223': color, 'F224': color, 'F225': color, 'F226': color, 
        'F227': color, 'F228': color, 'F229': color, 'F230': color, 'F231': color, 'F232': color
    },
    // torques
    'PDC-P_torque': {'E1': color},
    'PDC-D_torque': {'E1': color},
    'PDC-R_torque': {'E1': color},
    'PDC-RMID_torque': {'E1': color},
    'PDC-RS_torque': {'E1': color},
    'MFB-P1_torque': {'A47': color, 'A46': color, 'A45': color, 'A44': color, 'A43': color, 'A41': color, 'A42': color}, 
    'MFB-S2_torque': {'A47': color, 'A46': color, 'A45': color, 'A44': color, 'A43': color, 'A41': color, 'A42': color}, 
    'MFB-S_torque': {'A52': color, 'A53': color, 'A54': color, 'A55': color, 'A56': color, 'A51': color},
    'MFB-E_torque': {'E1': color, 'A1': color, 'A2': color},
    'MFB-E_M_torque': {'A21': color, 'A22': color, 'A23': color, 'A24': color, 'A25': color, 'A26': color, 'A27': color, 'A28': color, 'A29': color, 'A30': color, 'A20': color},
    'MFB-P2_torque': {'A21': color, 'A22': color, 'A23': color, 'A24': color, 'A25': color, 'A26': color, 'A27': color, 'A28': color, 'A29': color, 'A30': color, 'A20': color},
    'BATTERY_torque': {'BT': color},
    'BATTERY-2_torque': {'BT': color},
    'BATTERY-3_torque': {'BT': color},
    'PDC-E_torque': {'E1': color},
    'PDC-E_AMG_torque': {'E1': color},
    'PDC-ECOVER_torque': {'E1': color, 'E2': color},
    'PDC-S1_torque': {'E1': color},
    'G11_torque': {'G11': color}

}


//Fuses Types es un JSON para saber la categoria de Tamaños del tipo de fusible, este JSON tiene la intencion de ser usado para
// condicionar la colocacion de fusibles dentro de la caja y que no se inserte un valor equivocado en los datos.
var fuses_types = {
    'PDC-P': {
        'MF1': "MULTI", 'MF2': "MULTI", 'F300': "ATO", 'F301': "MINI", 'F302': "MINI", 'F303': "MINI", 'F304': "MINI", 'F305': "MINI", 'F318': "MINI", 
        'F319': "MINI", 'F320': "MINI", 'F321': "MINI", 'F322': "MINI", 'F323': "MINI", 'F324': "MINI", 'F325': "MINI", 'F326': "ATO", 'F327': "ATO", 
        'F328': "ATO", 'F329': "ATO", 'F330': "ATO", 'F331': "ATO", 'F332': "ATO", 'F333': "ATO", 'F334': "ATO", 'F335': "ATO", 'E21': "CONN", 
        'E22': "CONN"
    },
    'PDC-D': {
        'F200': "MINI", 'F201': "MINI", 'F202': "MINI", 'F203': "MINI", 'F204': "MINI", 'F205': "MINI", 'F206': "MINI", 'F207': "MINI", 'F208': "MINI", 
        'F209': "ATO", 'F210': "ATO", 'F211': "ATO", 'F212': "ATO", 'F213': "ATO", 'F214': "ATO", 'F215': "ATO", 'F216': "ATO", 'F217': "MINI", 
        'F218': "MINI", 'F219': "MINI", 'F220': "MINI", 'F221': "MINI", 'F222': "MINI", 'F223': "MINI", 'F224': "MINI", 'F225': "MINI", 'F226': "MINI", 
        'F227': "MINI", 'F228': "MINI", 'F229': "MINI", 'F230': "MINI", 'F231': "MINI", 'F232': "MINI"
    },
    'PDC-R': {
        'F400': "ATO", 'F401': "ATO", 'F402': "ATO", 'F403': "ATO", 'F404': "ATO", 'F405': "ATO", 'F411': "MINI", 'F410': "MINI", 'F409': "MINI", 
        'F408': "MINI", 'F407': "MINI", 'F406': "MINI", 'F412': "ATO", 'F413': "ATO", 'F414': "ATO", 'F415': "ATO", 'F416': "ATO", 'F417': "ATO", 
        'F420': "MAXI", 'F419': "MAXI", 'F418': "MAXI", 'F421': "ATO", 'F422': "ATO", 'F423': "ATO", 'F424': "ATO", 'F425': "ATO", 'F426': "ATO", 
        'F427': "MINI", 'F428': "MINI", 'F429': "MINI", 'F430': "MINI", 'F431': "MINI", 'F437': "MINI", 'F438': "MINI", 'F439': "MINI", 'F440': "MINI", 
        'F441': "MINI", 'F432': "MINI", 'F433': "MINI", 'F434': "MINI", 'F435': "MINI", 'F436': "MINI", 'F442': "MINI", 'F443': "MINI", 'F444': "MINI", 
        'F445': "MINI", 'F446': "MINI", 'F449': "MAXI", 'F448': "MAXI", 'F447': "MAXI", 'F450': "ATO", 'F451': "ATO", 'F452': "ATO", 'F453': "ATO", 
        'F454': "ATO", 'F455': "ATO", 'F456': "ATO", 'F457': "ATO", 'F458': "ATO", 'F459': "ATO", 'F460': "ATO", 'F461': "ATO", 'F462': "MAXI", 
        'F463': "MAXI", 'F464': "MAXI", 'F465': "MINI", 'F466': "MINI", 'F467': "MINI", 'F468': "MINI", 'F469': "MINI", 'F470': "MINI", 'F471': "ATO", 
        'F472': "ATO", 'F473': "ATO", 'F474': "ATO", 'F475': "ATO", 'F476': "ATO", 'F477': "ATO", 'F478': "ATO", 'F479': "ATO", 'F480': "ATO", 
        'F481': "ATO", 'F482': "ATO", 'RELX': "RELAY", 'RELU': "RELAY", 'RELT': "RELAY"
    },
    'PDC-RMID': {
        'F400': "ATO", 'F401': "ATO", 'F402': "ATO", 'F403': "ATO", 'F404': "ATO", 'F405': "ATO", 'F411': "MINI", 'F410': "MINI", 'F409': "MINI", 
        'F408': "MINI", 'F407': "MINI", 'F406': "MINI", 'F412': "ATO", 'F413': "ATO", 'F414': "ATO", 'F415': "ATO", 'F416': "ATO", 'F417': "ATO", 
        'F420': "MAXI", 'F419': "MAXI", 'F418': "MAXI", 'F421': "ATO", 'F422': "ATO", 'F423': "ATO", 'F424': "ATO", 'F425': "ATO", 'F426': "ATO", 
        'F427': "MINI", 'F428': "MINI", 'F429': "MINI", 'F430': "MINI", 'F431': "MINI", 'F437': "MINI", 'F438': "MINI", 'F439': "MINI", 'F440': "MINI", 
        'F441': "MINI", 'F432': "MINI", 'F433': "MINI", 'F434': "MINI", 'F435': "MINI", 'F436': "MINI", 'F442': "MINI", 'F443': "MINI", 'F444': "MINI", 
        'F445': "MINI", 'F446': "MINI", 'F450': "ATO", 'F451': "ATO", 'F452': "ATO", 'F453': "ATO", 'F454': "ATO", 'F455': "ATO", 'F456': "ATO", 
        'F457': "ATO", 'F458': "ATO", 'F459': "ATO", 'F460': "ATO", 'F461': "ATO", 'RELX': "RELAY", 'RELU': "RELAY", 'RELT': "RELAY", 'F449': "MAXI", 
        'F448': "MAXI", 'F447': "MAXI"
    },
    'PDC-RS': {
        'F400': "ATO", 'F401': "ATO", 'F402': "ATO", 'F403': "ATO", 'F404': "ATO", 'F405': "ATO", 'F411': "MINI", 'F410': "MINI", 'F409': "MINI", 
        'F408': "MINI", 'F407': "MINI", 'F406': "MINI", 'F412': "ATO", 'F413': "ATO", 'F414': "ATO", 'F415': "ATO", 'F416': "ATO", 'F417': "ATO", 
        'F420': "MAXI", 'F419': "MAXI", 'F418': "MAXI", 'F421': "ATO", 'F422': "ATO", 'F423': "ATO", 'F424': "ATO", 'F425': "ATO", 'F426': "ATO", 
        'F427': "MINI", 'F428': "MINI", 'F429': "MINI", 'F430': "MINI", 'F431': "MINI", 'F437': "MINI", 'F438': "MINI", 'F439': "MINI", 'F440': "MINI", 
        'F441': "MINI", 'F432': "MINI", 'F433': "MINI", 'F434': "MINI", 'F435': "MINI", 'F436': "MINI", 'F442': "MINI", 'F443': "MINI", 'F444': "MINI", 
        'F445': "MINI", 'F446': "MINI", 'F450': "ATO", 'F451': "ATO", 'F452': "ATO", 'F453': "ATO", 'F454': "ATO", 'F455': "ATO", 'F456': "ATO", 
        'F457': "ATO", 'F458': "ATO", 'F459': "ATO", 'F460': "ATO", 'F461': "ATO", 'RELX': "RELAY", 'RELU': "RELAY", 'RELT': "RELAY", 'F449': "MAXI", 
        'F448': "MAXI", 'F447': "MAXI"
    },
    'F96': {
        'F96': "ATO"
    }, 
    'PDC-S': {
        '1': "ATO", '2': "ATO", '3': "ATO", '4': "ATO", '5': "ATO", '6': "ATO"
    }, 
    'TBLU': {
        '9': "ATO_clear", '8': "ATO_clear", '7': "ATO_clear", '6': "ATO_clear", '5': "ATO_clear", '4': "ATO_clear", '3': "ATO_clear", '2': "ATO_clear", '1': "ATO_clear"
    },
    'PDC-E': {
        /* 'A1-2': "CONN",'A1-3': "CONN",'A2-1': "CONN",'A2-2': "CONN",'A2-5': "CONN", */'F100': "ATO",'F101': "ATO",'F102': "ATO",'F103': "ATO",'F104': "ATO",
        'F105': "ATO",'F106': "ATO",'F107': "ATO",'F108': "ATO",'F109': "ATO",'F110': "ATO",'F111': "ATO",'F112': "ATO",'F113': "ATO",'F114': "ATO",
        'F115': "ATO",'F116': "ATO",'F117': "ATO",'F118': "MINI",'F119': "MINI",'F120': "MINI",'F121': "MINI",'F122': "MINI",'F123': "MINI",'F124': "MINI",
        'F125': "MINI",'F126': "MINI",'F127': "MINI",'F128': "MINI",'F129': "MINI",'F130': "MINI",'F131': "MINI",'F132': "MINI",'F133': "MINI",'F134': "MINI",
        'F135': "MINI",'F136': "MAXI",'F137': "MINI",'F138': "MINI",'F139': "MINI",'F140': "MINI",'F141': "MINI",'F142': "MINI",'RELN': "RELAY",'RELR': "RELAY"
    },
    'PDC-E_AMG': {
        /* 'A1-2': "CONN",'A1-3': "CONN",'A2-1': "CONN",'A2-2': "CONN",'A2-5': "CONN", */'F100': "ATO",'F101': "ATO",'F102': "ATO",'F103': "ATO",'F104': "ATO",
        'F105': "ATO",'F106': "ATO",'F107': "ATO",'F108': "ATO",'F109': "ATO",'F110': "ATO",'F111': "ATO",'F112': "ATO",'F113': "ATO",'F114': "ATO",
        'F115': "ATO",'F116': "ATO",'F117': "ATO",'F118': "MINI",'F119': "MINI",'F120': "MINI",'F121': "MINI",'F122': "MINI",'F123': "MINI",'F124': "MINI",
        'F125': "MINI",'F126': "MINI",'F127': "MINI",'F128': "MINI",'F129': "MINI",'F130': "MINI",'F131': "MINI",'F132': "MINI",'F133': "MINI",'F134': "MINI",
        'F135': "MINI",'F136': "MAXI",'F137': "MINI",'F138': "MINI",'F139': "MINI",'F140': "MINI",'F141': "MINI",'F142': "MINI",'F143': "ATO",'F144': "ATO",
        'F145': "ATO",'F146': "MAXI",'F147': "ATO",'RELI': "RELAY",'RELN': "RELAY",'RELQ': "RELAY",'RELR': "RELAY"
    },
    'PDC-S1': {
        'F200': "MINI", 'F201': "MINI", 'F202': "MINI", 'F203': "MINI", 'F204': "MINI", 'F205': "MINI", 'F206': "MINI", 'F207': "MINI", 'F208': "MINI", 
        'F209': "ATO",  'F210': "ATO",  'F211': "ATO", 'F212': "ATO", 'F213': "ATO", 'F214': "ATO", 'F215': "ATO", 'F216': "ATO", 'F217': "MINI", 
        'F218': "MINI", 'F219': "MINI", 'F220': "MINI", 'F221': "MINI", 'F222': "MINI", 'F223': "MINI", 'F224': "MINI", 'F225': "MINI", 'F226': "MINI", 
        'F227': "MINI", 'F228': "MINI", 'F229': "MINI", 'F230': "MINI", 'F231': "MINI", 'F232': "MINI"
    },

    //Torques
    'PDC-P_torque': {'E1': 'TERMINAL'},
    'PDC-D_torque': {'E1': 'TERMINAL'},
    'PDC-R_torque': {'E1': 'TERMINAL'},
    'PDC-RMID_torque': {'E1': 'TERMINAL'},
    'PDC-RS_torque': {'E1': 'TERMINAL'},
    'MFB-P1_torque': {'A47': 'TERMINAL', 'A46': 'TERMINAL', 'A45': 'TERMINAL', 'A44': 'TERMINAL', 'A43': 'TERMINAL', 'A41': 'TERMINAL', 'A42': 'TERMINAL'}, 
    'MFB-S2_torque': {'A47': 'TERMINAL', 'A46': 'TERMINAL', 'A45': 'TERMINAL', 'A44': 'TERMINAL', 'A43': 'TERMINAL', 'A41': 'TERMINAL', 'A42': 'TERMINAL'}, 
    'MFB-S_torque': {'A52': 'TERMINAL', 'A53': 'TERMINAL', 'A54': 'TERMINAL', 'A55': 'TERMINAL', 'A56': 'TERMINAL', 'A51': 'TERMINAL'},
    'MFB-E_torque': {'A21': 'TERMINAL', 'A22': 'TERMINAL', 'A23': 'TERMINAL', 'A24': 'TERMINAL', 'A25': 'TERMINAL', 'A26': 'TERMINAL', 'A27': 'TERMINAL', 'A28': 'TERMINAL', 'A29': 'TERMINAL', 'A30': 'TERMINAL', 'A20': 'TERMINAL', 'E1': 'TERMINAL', 'A1': 'TERMINAL', 'A2': 'TERMINAL'},
    'MFB-P2_torque': {'A21': 'TERMINAL', 'A22': 'TERMINAL', 'A23': 'TERMINAL', 'A24': 'TERMINAL', 'A25': 'TERMINAL', 'A26': 'TERMINAL', 'A27': 'TERMINAL', 'A28': 'TERMINAL', 'A29': 'TERMINAL', 'A30': 'TERMINAL', 'A20': 'TERMINAL'},
    'BATTERY_torque': {'BT': 'TERMINAL'},
    'BATTERY-2_torque': {'BT': 'TERMINAL'},
    'BATTERY-3_torque': {'BT': 'TERMINAL'},
    'PDC-E_torque': {'E1': 'TERMINAL'},
    'PDC-E_AMG_torque': {'E1': 'TERMINAL'},
    'PDC-ECOVER_torque': {'E1': 'TERMINAL', 'E2': 'TERMINAL'},
    'PDC-S1_torque': {'E1': 'TERMINAL'},
    'MFB-E_M_torque': {'A21': 'TERMINAL', 'A22': 'TERMINAL', 'A23': 'TERMINAL', 'A24': 'TERMINAL', 'A25': 'TERMINAL', 'A26': 'TERMINAL', 'A27': 'TERMINAL', 'A28': 'TERMINAL', 'A29': 'TERMINAL', 'A30': 'TERMINAL', 'A20': 'TERMINAL'},
    'G11_torque': {'G11': 'TERMINAL'}


}

var torques_BB = {
    'PDC-D_torque':    { "E1": [[353, 460],[403, 510]]},
    'PDC-P_torque':    { "E1": [[356, 457],[401, 502]]},
    'PDC-R_torque':    { "E1": [[404, 325],[449, 370]]},
 'PDC-RMID_torque':    { "E1": [[404, 325],[449, 370]]},
   'PDC-RS_torque':    { "E1": [[404, 325],[449, 370]]},
   'MFB-P1_torque':    { 
                  'A47': [[264, 345],[314, 395]], 'A46': [[328, 345],[378, 395]], 'A45': [[384, 350],[434, 400]],
                  'A44': [[430, 350],[480, 400]], 'A43': [[475, 350],[515, 390]], 'A41': [[529, 345],[579, 395]],
                  'A42': [[594, 387],[634, 427]]
                },
    'MFB-S_torque':    {
                  "A52": [[306, 394],[366, 454]], "A53": [[376, 408],[421, 453]], "A54": [[425, 408],[470, 453]],
                  "A55": [[475, 408],[520, 453]], "A56": [[523, 408],[568, 453]], "A51": [[439, 260],[499, 320]]
                },
    'MFB-E_torque':    {
                  "E1":  [[300,130],[385,215]],  "A1": [[460,310],[545,395]],  "A2": [[140,310],[225,395]],
                  "A21": [[286,470],[317,501]], "A22": [[337,470],[365,502]], "A23": [[384,470],[417,499]], 
                  "A24": [[436,469],[467,501]], "A25": [[495,474],[538,517]], "A26": [[562,470],[598,501]], 
                  "A27": [[612,471],[648,501]], "A28": [[662,471],[696,502]], "A29": [[710,471],[744,501]], 
                  "A30": [[426,275],[473,316]], "A20": [[557,276],[600,321]]
                },
   'MFB-P2_torque':   {
                  "A21": [[253, 462],[298, 507]], "A22": [[305, 462],[350, 507]], "A23": [[354, 462],[399, 507]],
                  "A24": [[406, 462],[451, 507]], "A25": [[462, 463],[524, 525]], "A26": [[532, 462],[577, 507]],
                  "A27": [[583, 462],[628, 507]], "A28": [[633, 462],[678, 507]], "A29": [[683, 462],[728, 507]],
                  "A30": [[391, 260],[453, 322]], "A20": [[526, 260],[588, 322]]
                },
  'BATTERY_torque':  {
                  "BT": [[164, 146],[239, 221]]
                },
'BATTERY-2_torque':  
                {
                  "BT": [[164, 146],[239, 221]]
                },
      'PDC-E_torque':    {
                  "E1": [[532,321],[566,357]]
                },
	'PDC-E_AMG_torque':  {
                  "E1": [[532,321],[566,357]]
	              },
	'PDC-ECOVER_torque': {
		              "E1": [[279,137],[318,171]], "E2": [[581,134],[621,173]]
	              },
	'PDC-S1_torque':     {
		              "E1": [[360,491],[403,533]]
	              },
  'G11_torque':        {
		            "G11": [[380,584],[484,664]]
	              }
}


var historial="";

var pdce_caja="";
var pdce_caja_to_db = "";



/*Box Array  
Es un Objeto que se utliza de guia para almacenar cajas y cavidades guardas en la edcion y creacion de Modulos para multiples cajas
 box_array = {
 'F96': ['F96'],
 'PDC-S':['1','2','3','4']
 }

 Eta variable tiene la intencion de disminuir la cantidad de variable con el mismo proposito
*/
//guarda las cajas con fusibles insertados
// box_array = { 'PDC-R': ['F200','F201','F202','F203' ] }
var box_array = {}
var box_puntos = {}

// var tblu_array=[]
// var tblu_puntos=[]
// var pdcd_array=[]
// var pdcd_puntos=[]

// var pdcp_array=[]
// var pdcp_puntos=[]

var pdce_array = [];
var pdce_amg_array = [];
var pdcs1_array = [];




  class Change {
    constructor(caja, variante, mayusVariante, mayusCaja){
        this.caja = caja;
        this.variante = variante;
        this.mayusVariante = mayusVariante;
        this.mayusCaja = mayusCaja;
    }

      agregarVariante(newVariante){

            console.log("Entrando a agregar variante", newVariante);
            

            if (newVariante === "null") {
              console.warn("No hay variante de Caja");
              return;
            }


            const v = Array.isArray(newVariante)? newVariante : newVariante.split(',');
            console.log(v);
            

            if (v.length !== 2) {
                console.error("Formato de variante incorrecto");
                return;
            }
            this.mayusVariante = v[0];
            this.variante = v[1];
            
            
            
            if (!box_array[this.mayusVariante]){
              box_array[this.mayusVariante] = [];
              console.log(this.mayusVariante);
              
            }

            
              // console.log('BOX ARRAY ANTERIOR', box_array);
              // console.log('BOX ARRAY ANTERIOR', box_array[v[0]]);          
              console.log('Agregando ', this.mayusVariante, this.mayusCaja);
              
              if (v[0].includes('PDC-R') || v[0].includes('PDC-E')) {                  
                  this.caja = v[1];
                  this.mayusCaja = v[0];               
              } 
              if (v[0].includes('torque')) {
                this.mayusCaja = v[0];
              }

              if (!this.mayusVariante.includes('torque') && this.mayusCaja.includes('torque')) {
                this.mayusCaja = this.mayusVariante;
              }

              // realiza un intercambio de los datos de la caja original y la caja variante
              // si la caja variante es igual a la caja original, no habra cambio alguno.
              fuses_value[this.mayusVariante] = {...fuses_value[this.mayusCaja]};
      }

      eliminarVariante(variante){
        const v = Array.isArray(variante)? variante : variante.split(',');
        console.log(v);
        
        const mayusCambiante = v[0];
        const cambiante = v[1];
        const mayusOriginal = v[2];
        const original = v[3];


        
        console.log('Eliminando Variante', mayusCambiante);
        

        //console.log(v, box_array, box_array[v[0]]);

        //Esto es para evitar eliminar el valor original en Fuses_value
        if ( mayusOriginal !== mayusCambiante) {
          console.log(mayusCambiante);
          
          delete box_array[mayusCambiante];
          delete fuses_value[mayusCambiante]

          // console.log(box_array);
          // console.log(fuses_value);
          
        }else{
          delete box_array[mayusCambiante];
          console.log(mayusCambiante);
          console.log(fuses_value[mayusCambiante]);
          var objct_fuses  = fuses_value[mayusCambiante];
          Object.keys(objct_fuses).forEach(x => {
             fuses_value[mayusCambiante][x] = 'vacio'
           });
        }

        const element = document.getElementById(`section_${cambiante}`);
        element.remove(); // Removes the div with the 'div-02' id

        

        //delete box_array[v[0]];
        //delete fuses_value[this.mayusVariante];


        

      }

  
      cambiarVariante(variante , determinante = false) {
        if (variante === "null") {
            console.warn("No hay variante de Caja");
            return;
        }
  
        const v = Array.isArray(variante)? variante : variante.split(',');
        var found, minuscula;
        
        


        if (v.length !== 2) {
            console.error("Formato de variante incorrecto");
            return;
        }
        
        //Hay que encontrar la variante que coincida con la caja que se quiere cambiar
        //estableciendo de nuevo las varaintes que realizaremos los cambios
        const boxKeys = Object.keys(box_array)        
        
        console.log('Por Aqui paso un caballo', v[0]);
        

        if (v[0].includes('torque') ) {
          found = estacion.includes("MBM")?boxKeys.find((element) => element.includes(PDC) && element.includes('torque') && !element.includes('COVER') ) :boxKeys.find((element) => element.includes(PDC) && element.includes('torque') );
          console.log('Hey, look what i Found', found);
          console.log("la peticion incluye Torque");
          
          minuscula = found.replace('-', '').toLowerCase();
          minuscula = minuscula.replace('torque', 't');
          this.mayusVariante = found;
          this.variante = minuscula;
          
        }else{
          found = estacion.includes("MBM")?boxKeys.find((element) => element.includes(PDC) && !element.includes('torque') ) :boxKeys.find((element) => element.includes(PDC) && !element.includes('torque') );
          console.log("la peticion no incluye Torque");


          console.log(box_array);
          
          console.log('Hey, look what i Found', found);
          minuscula = found.replace('-', '').toLowerCase();
          this.mayusVariante = found;
          this.variante = minuscula;
        }

        if (!box_array[this.mayusVariante]){
          box_array[this.mayusVariante] = [];
        }

        
  
        if (v[0] !== this.mayusVariante) {
          
          //console.log('BOX ARRAY ANTERIOR', box_array);
          console.log('BOX ARRAY ANTERIOR', box_array[v[0]]);          
          console.log('CAMBIANDO ', this.mayusVariante, ' a ', v[0] );

          
          box_array[v[0]] = box_array[this.mayusVariante];
          console.log('Nuevo BOX_ARRAY', box_array);
          // Eliminar la antigua clave
          delete box_array[this.mayusVariante];
          console.log(box_array);       
        }
        //console.log(this.caja);
        
        
        

          this.mayusVariante = v[0];
          this.variante = v[1];
          
            if (v[0].includes('PDC-R') || v[0].includes('PDC-E')) {
              if (found !== undefined) {
                console.log('FIND HIM',found);
                minuscula = found.replace('-', '').toLowerCase();
                minuscula = minuscula.includes('torque')? minuscula.replace('torque', 't'): minuscula;
                this.mayusCaja = found;
                this.caja = minuscula;
                console.log('El minusculo', minuscula);
                
              }


              var objct_fuses  = fuses_value[this.mayusCaja];
              
              box_array[v[0]] = [];
            
              Object.keys(fuses_value[this.mayusCaja]).forEach(x => {
                //console.log(fuses_value[this.mayusVariante][x], this.mayusVariante, x);
                if (fuses_value[this.mayusVariante][x]) {
                  fuses_value[this.mayusVariante][x] = objct_fuses[x];
                  
                  console.log(fuses_value[this.mayusVariante][x], this.mayusVariante);
                  if (objct_fuses[x] !== 'vacio' &&  objct_fuses[x] !== undefined) {
                    //console.log("AQUI --->", x, this.mayusCaja, this.mayusVariante, objct_fuses[x]);
                    //console.log(box_array[v[0]]);
                     
                    box_array[v[0]].push(x);

                   }else{
                     objct_fuses[x] = 'vacio';

                   }
                    
                }else{
                  objct_fuses[x] = 'vacio';
                  
                }
              
                fuses_value[this.mayusCaja][x] = 'vacio'
              });

              box_array[v[0]] = removeDuplicates(box_array[v[0]])

              function removeDuplicates(e) {
                return [...new Set(e)];
            }

            console.log('BOX ARRAY FINAL', box_array); 

            if (!determinante) {
              
              console.log(this.caja);
              const element = document.getElementById(`section_${this.caja}`);
              
              element.remove(); // Removes the div with the 'div-02' id
            }


            this.caja = v[1];
            this.mayusCaja = v[0];
            
                     }
    }
    mostrarPropiedades() {
      console.log(`La caja: ${this.caja}, variante: ${this.variante}, mayusVariante: ${this.mayusVariante}, mayusCaja: ${this.mayusCaja}, `);
    }
    getVariante() {
      return this.variante;
    }
    getMayusVariante() {
      return this.mayusVariante;
    }
    getCaja() {
      return this.caja;
    }
    getMayusCaja() {
      return this.mayusCaja;
    }  
  }
  // Cajas de Fusibles Originales

// Definir todas las instancias de Change en un objeto de mapeo
const changesMap = !estacion.includes("MBM")? {

  //                      caja, variante, mayusVariante, mayusCaja
  "PDC-R":     new Change('pdcr', 'pdcr', 'PDC-R', 'PDC-R'),
  "PDC-S":     new Change('pdcs', 'pdcs', 'PDC-S', 'PDC-S'),
  "PDC-P":     new Change('pdcp', 'pdcp', 'PDC-P', 'PDC-P'),
  "PDC-D":     new Change('pdcd', 'pdcd', 'PDC-D', 'PDC-D'),
  "TBLU":      new Change('tblu', 'tblu', 'TBLU', 'TBLU'),
  "F96":       new Change('f96', 'f96', 'F96', 'F96'),
  "MFB-P1":    new Change('mfbp1', 'mfbp1', 'MFB-P1', 'MFB-P1'),
  "MFB-P2":    new Change('mfbp2', 'mfbp2', 'MFB-P2', 'MFB-P2'),
  "MFB-S2":    new Change('mfbs2', 'mfbs2', 'MFB-S2', 'MFB-S2'),
  "MFB-S":     new Change('mfbs', 'mfbs', 'MFB-S', 'MFB-S'),
  "MFB-E":     new Change('mfbe', 'mfbe', 'MFB-E', 'MFB-E'),
  "BATTERY":   new Change('battery', 'battery', 'BATTERY', 'BATTERY'),
  "BATTERY-2": new Change('battery2', 'battery2', 'BATTERY-2', 'BATTERY-2'),
  
}: {
  "G11": new Change('g11', 'g11', 'G11', 'G11'),
  "PDC-E": new Change('pdce', 'pdce', 'PDC-E', 'PDC-E'),
  "PDC-E_AMG": new Change('pdce_amg', 'pdce_amg', 'PDC-E_AMG', 'PDC-E_AMG'),
  "PDC-ECOVER": new Change('pdcecover', 'pdcecover', 'PDC-ECOVER', 'PDC-ECOVER'),
  "PDC-S1": new Change('pdcs1', 'pdcs1', 'PDC-S1', 'PDC-S1'),
  "MFB-E_M": new Change('mfbem', 'mfbem', 'MFB-E_M', 'MFB-E_M'),
  
};



// //                              caja, variante, mayusVariante, mayusCaja
//   const changePDCR = new Change('pdcr', 'pdcr', 'PDC-R', 'PDC-R');
//   const changePDCS = new Change('pdcs', 'pdcs', 'PDC-S', 'PDC-S');
//   const changePDCP = new Change('pdcp', 'pdcp', 'PDC-P', 'PDC-P');
//   const changePDCD = new Change('pdcd', 'pdcd', 'PDC-D', 'PDC-D');
//   const changeTBLU = new Change('tblu', 'tblu', 'TBLU', 'TBLU');
//   const changeF96  = new Change('f96', 'f96', 'F96', 'F96');
  
//   //box_array[`${changeF96.getMayusCaja()}`]= []
//   //box_array[`${changePDCS.getMayusCaja()}`]= []

// // Cajas de Fusibles Originales
// //                                  caja, variante, mayusVariante, mayusCaja
//   const changeMFBP1 =    new Change('mfbp1','mfbp1', 'MFB-P1', 'MFB-P1')
//   const changeMFBP2 =    new Change('mfbp2','mfbp2', 'MFB-P2', 'MFB-P2')
//   const changeMFBS =     new Change('mfbs','mfbs', 'MFB-S', 'MFB-S')
//   const changeMFBS2 =    new Change('mfbs2','mfbs2', 'MFB-S2', 'MFB-P1')
//   const changeMFBE =     new Change('mfbe','mfbe', 'MFB-E', 'MFB-E')
//   const changeBATTERY =  new Change('battery','battery', 'BATTERY', 'BATTERY')
//   const changeBATTERY2 = new Change('battery2','battery2', 'BATTERY-2', 'BATTERY-2')



// Función para encontrar el cambio correspondiente
function findChange(change) {
  console.log("findChange", change); 

  for (let key in changesMap) {
    
    if (change.includes(key)) {
      console.log(key);
      console.log("findChange", change);
      console.log("findChange", changesMap[key]);
      return changesMap[key];
    }
  }
  return null;
}



  function cargar_imagen(change) {
    

    console.log("CARGAR IMAGEN",change);
    
    const variante = change.getVariante().trim();
    const mayusVariante = change.getMayusVariante();
    const actual_caja = change.getCaja();
    const mayusCaja = change.getMayusCaja();
    
    console.log("CARGAR IMAGEN", fuses_value[mayusVariante]);
    
    // var variante = changePDCS.getVariante();
    // var mayusVariante = changePDCS.getMayusVariante();
    // var actual_caja = changePDCS.getCaja();
    
    //console.log(fuses_value);
  
  
    let img_caja = document.getElementById(`${variante}_image_v_canvas`);
    var t1 = new ToolTip(img_caja, "This is a tool-tip", 150,change);
    if (img_caja.getContext) {
      var ctx = img_caja.getContext("2d");
      var img = new Image();
      //var variante = changePDCS.getVariante();
      //console.log(variante, mayusCaja, actual_caja, mayusVariante);
      
      
      img.src =  `static/content/cajas/${tipoArnes}/${actual_caja}/${variante}.jpg`;
      console.log(img.src);
      var arreglo = box_array[mayusVariante];
      img.onload = function () {
        box_array[mayusVariante] = arreglo;
        imgWidth = this.width;
        imgHeight = this.height;
        img_caja.width = imgWidth;
        img_caja.height = imgHeight;
        // console.log("imgWidth: ",imgWidth);
        // console.log("imgHeight: ",imgHeight);
        // console.log("img.width: ",img.width);
        // console.log("img.height: ",img.height);
        ctx.drawImage(this, 0, 0, imgWidth, imgHeight);
        var datosimagen = ctx.getImageData(0, 0, imgWidth, imgHeight);
        // console.log("datos imagen: ",datosimagen)
        datosPrim = datosimagen.data;
        ctx.lineWidth = "3";
        pintar_2();
  
        img_caja.onmouseup = function (event) {
          var fusible;
          // console.log(fuses_BB);
          // console.log(fuses_BB[mayusVariante]);
          let keys = Object.keys(fuses_BB[mayusCaja]);
          console.log(`KEYS DE ${mayusCaja}: `,keys);
          var x = event.pageX;
          var y = event.pageY;
          var coor = "X coords: " + x + ", Y coords: " + y;
          console.log(variante);
          var X = document.getElementById(`${variante}_image_v_canvas`).getBoundingClientRect();

          pixelx = x - window.scrollX - X.left
          pixely = y - window.scrollY - X.top
          // console.log("Pixel x: "+pixelx+" Pixel y: "+pixely);
  
          for (i = 0; i < keys.length; i++) {
            if (pixelx >= fuses_BB[mayusCaja][keys[i]][0][0] && pixelx <= fuses_BB[mayusCaja][keys[i]][1][0] && pixely >= fuses_BB[mayusCaja][keys[i]][0][1] && pixely <= fuses_BB[mayusCaja][keys[i]][1][1] && color != "vacio") {
              var temporal_text = "Esta dentro de " + keys[i]
              console.log("TEMPORAL TEXT",temporal_text)
              element = keys[i]


              let cavidad_ctgry = fuses_types[mayusCaja][element];


              if (cavidad_ctgry !== ctgry)  {
                Toastify({
    
                  text: `Fusible Incorrecto (${ctgry}),Ahi tiene que colocar un Fusible ${cavidad_ctgry}`,
                  backgroundColor: '#C63939',
                  offset: {
                    x: 10, // horizontal axis - can be a number or a string indicating unity. eg: '2em'
                    y: 100 // vertical axis - can be a number or a string indicating unity. eg: '2em'
                  },
                  duration: 3000
                  
                  }).showToast();
    
                return false
              }


              // if (estacion.includes('MBM')) {
                
              //   if (mayusCaja === 'MFB-E') {
              //     fuses_value[mayusCaja]['MOTOR'];
              //   }
                
              // }
              
              fuses_value[mayusVariante][element] = color


              //console.log(cavidad);
              fusible = element;
              console.log(fusible);
              switch (color) {
                case "cafe":
                  amperaje = '7.5';
                  break;
                case 'rojo':                 
                  if (fuses_types[mayusCaja][fusible] === 'MAXI') {
                    amperaje = '50';
                  } else {
                    amperaje = '10';
                  }
                  break;
                case "verde":
                  amperaje = '30';
                  break;
                case "azul":
                  amperaje = '15';
                  break;
                case "beige":
                  amperaje = '5';
                  break;
                case "natural":
                  amperaje = '25'
                  break;
                case "amarillo":
                  amperaje = '20';
                  break;
                case "naranja":
                  amperaje = '40';
                  break;
                case "1008695":
                  amperaje = '60' //Rosa                            
                  break;
                case "1010733":
                  amperaje = '70' //Gris                            
                  break;
                  case "true":
                    case true:                   
                    color_style = "green"
                    amperaje = 'N/A'
                    break;
                  case "a":
                    color_style = "blue"
                    amperaje = 'N/A'
                    break;
                  case "b":
                    color_style = "orange"
                    amperaje = 'N/A'
                    break;
                  case "c":
                    color_style = "red"
                    amperaje = 'N/A'
                    break;
                    case "d":
                      color_style = "#fc0585"
                      amperaje = 'N/A'
                      break;
              }
              //console.log(mayusVariante);
              //console.log(box_array);
              //console.log(box_array[mayusVariante]);
              

              if (box_array[mayusVariante].length !== 0) {
                if (box_array[mayusVariante].indexOf(element) != -1) {
                  //console.log("ELEMENT", element);
                  fuses_value[mayusVariante][element] = "vacio";
                  box_array[mayusVariante].splice(box_array[mayusVariante].indexOf(element), 1)
                  restaurar(ctx, img, variante, actual_caja);
                  pintar_2()
                } else {
                  var temp = color;
                  if (temp == "eliminar") {
                    console.log("Fusible eliminado")
                    fuses_value[mayusVariante][element] = "vacio";
                    return
                  }
                  
                  
                  box_array[mayusVariante].push(element);
                  pintar(element)
                }
              } else {
                var temp = color;
                if (temp == "eliminar") {
                  console.log("Fusible eliminado")
                  fuses_value[mayusVariante][element] = "vacio";
                  return
                }
                // if (cavidad_ctgry !== ctgry)  {
                //   Toastify({
                    
                //     text: `Fusible Incorrecto ${ctgry}`,
                    
                //     duration: 3000
                    
                //   }).showToast();
                  
                //   return false
                // }
                box_array[mayusVariante].push(element)

                pintar(element)
              }
              // console.log("LEYENDO ARRAY 2: ",box_array[mayusVariante]);
            }
          }
          //console.log("CAVIDAD: ", fusible);
        }
  
        function pintar(element) {
          console.log("PINTAR_1");
          let cavidad = element;
          //console.log("CAVIDAD : ",cavidad);
          //console.log("Fusible Colocado: ",color);
  
          let cavidadx = fuses_BB[mayusCaja][cavidad][0][0];
          let cavidady = fuses_BB[mayusCaja][cavidad][0][1];
          let cavidadw = fuses_BB[mayusCaja][cavidad][1][0];
          let cavidadh = fuses_BB[mayusCaja][cavidad][1][1];
  
          let cavidad_ctgry = fuses_types[mayusCaja][element];
          //console.log(cavidadx)
          //console.log(cavidady)
          //console.log(cavidadw)
          //console.log(cavidadh)
          getDistance(cavidadx, cavidady, cavidadw, cavidadh);
  
          let orientacion = xDistance > yDistance ? 'h' : 'v';
          var image = new Image();
  
          //console.log(mayusVarianteDISTANCE X",xDistance)
          //console.log(mayusVarianteDISTANCE Y",yDistance)
          //console.log(`orientacion ${orientacion} y de cavidad tipo ${cavidad_ctgry}`);
          ctx.strokeStyle = color_style;
          if (cavidad_ctgry !== 'TERMINAL') {
            image.src = `static/content/fusibles/${cavidad_ctgry},${amperaje},${color}${orientacion}.jpg`
            color_style = "#ffffff00"
            
          }else{
            if (color !== 'true' && color !== true) {
              ctx.font = '30px Arial';
              // ctx.textAlign = "center";
              var mayusTerminal = color.toUpperCase()
              ctx.strokeText(mayusTerminal, cavidadx+20, cavidady+100)
            }
          }
  
          image.onerror = function () {
            console.error('Error on Image',);
            
            return fuses_value[mayusVariante][element] = "vacio";
          }
          image.onload = function () {
            var pat = ctx.createPattern(image, 'no-repeat');
            ctx.fillStyle = pat;
            ctx.drawImage(image, cavidadx, cavidady, xDistance, yDistance);
          }
  
          ctx.beginPath();
          
          ctx.strokeRect(cavidadx, cavidady, xDistance, yDistance);
        }
  
        function pintar_2() {
          console.log("pintar_2", mayusVariante);
           
          if(box_array[mayusVariante]){
            //console.log(mayusVariante, ' box_array', box_array);
            for (let i = 0; i < box_array[mayusVariante].length; i++) {
              //console.log(box_array[mayusVariante]);
              // var fusible_imagen = new Image();
              let cavidad = box_array[mayusVariante][i];




              
              var fuse_inserted;
              //console.log("CAVIDAD : ",cavidad);
              //console.log('MayusVariante',mayusVariante);

              fuse_inserted = fuses_value[mayusVariante][box_array[mayusVariante][i]];
              let fusibleColocado = fuses_value[mayusVariante][box_array[mayusVariante][i]];

               if (fusibleColocado === "vacio" && fuse_inserted !== "vacio") {
                 //console.log(fuse_inserted);
                 fusibleColocado = fuse_inserted[0]
               }

               if (!fuses_value[mayusVariante][cavidad]) {
                //console.log(splits[0],cavidad, boxInfo[boxData][cavidad]);
                var lastChar = cavidad.substr(cavidad.length - 1); // => "1"
                var removeChar = cavidad.slice(0, -1);
                console.log(removeChar);
                cavidad = removeChar;
                fusibleColocado = lastChar
              }
              //console.log("Fusible Colocado: ",fusibleColocado);
              //console.log(cavidad);
              //console.log(fuses_BB[mayusVariante]); 
              //condicional para identificar las cajas de torque
              var cualCaja = mayusVariante.includes('torque')? mayusVariante : mayusCaja;
              
              //console.log(cavidad,mayusCaja,mayusVariante);
              
              console.log(cavidad, fuses_BB[cualCaja][cavidad]);
              
              let cavidadx = fuses_BB[cualCaja][cavidad][0][0];
              let cavidady = fuses_BB[cualCaja][cavidad][0][1];
              let cavidadw = fuses_BB[cualCaja][cavidad][1][0];
              let cavidadh = fuses_BB[cualCaja][cavidad][1][1];
  
              let cavidad_ctgry = fuses_types[mayusCaja][cavidad];
              // console.log(cavidadx)
              // console.log(cavidady)
              // console.log(cavidadw)
              // console.log(cavidadh)
              getDistance(cavidadx, cavidady, cavidadw, cavidadh);
  
              // console.log(mayusVarianteDISTANCE X",xDistance)
              // console.log(mayusVarianteDISTANCE Y",yDistance)
              let orientacion = xDistance > yDistance ? 'h' : 'v';
              var image = new Image();
              //console.log(color_style);
              //console.log(fusibleColocado);
              //color_style = "#ffffff00"
              switch (fusibleColocado) {
                case "cafe":
                  //color_style = "#8B4513"
                  amperaje = '7.5';
                  break;
                case 'rojo':
                  //color_style = "#FF0000"
                  if (cavidad_ctgry === "MAXI") {
                    amperaje = '50';
                  } else {
                    amperaje = '10';
                  }
                  break;
                case "verde":
                  //color_style = "#008000" 
                  amperaje = '30';
                  break;
                case "azul":
                  //color_style = "#0000FF"
                  amperaje = '15';
                  break;
                case "beige":
                  //color_style = "#FFD700"
                  amperaje = '5';
                  break;
                case "natural":
                  //color_style = "#FFFFFF"
                  amperaje = '25'
                  break;
                case "amarillo":
                  //color_style = "#FFFF00"
                  amperaje = '20';
                  break;
                case "naranja":
                  //color_style = "#FFA500"
                  amperaje = '40';
                  break;
                case "1008695":
                  //color_style = "#FF00FF"
                  amperaje = '60' //Rosa                        
                  break;
                case "1010733":
                  //color_style = "#A9A9A9"
                  amperaje = '70' //Gris                        
                  break;
                // Torque
                case "true":
                  case true:                   
                  color_style = "green"
                  amperaje = 'N/A'
                  break;
                case "a":
                  color_style = "blue"
                  amperaje = 'N/A'
                  break;
                case "b":
                  color_style = "orange"
                  amperaje = 'N/A'
                  break;
                case "c":
                  color_style = "red"
                  amperaje = 'N/A'
                  break;
                  case "d":
                    color_style = "#fc0585"
                    amperaje = 'N/A'
                    break;
                default:
                  amperaje = 'N/A'
                  break;
              }
              color_style = cavidad_ctgry === 'TERMINAL'? color_style :  '#ffffff00';
              
              if (amperaje !== 'N/A') {
                image.src = `static/content/fusibles/${cavidad_ctgry},${amperaje},${fusibleColocado}${orientacion}.jpg`
              }
              ctx.beginPath();
              ctx.strokeStyle = color_style;
              ctx.strokeRect(cavidadx, cavidady, xDistance, yDistance);

              if (cavidad_ctgry === 'TERMINAL' && fusibleColocado != true && fusibleColocado != 'true'){
                  ctx.font = '30px Arial';
                  var mayusTerminal =  fusibleColocado.toUpperCase();
                  ctx.strokeText(mayusTerminal, cavidadx+20, cavidady+100);
              }

              //console.log(`static/content/fusibles/${cavidad_ctgry},${amperaje},${fusibleColocado}${orientacion}.jpg`)
              cargar_cavidad(cavidad_ctgry, amperaje, fusibleColocado, orientacion, image, ctx, cavidadx, cavidady, cavidadw, cavidadh);
            }
          }
          else{
           console.log("no hay nada que cargar"); 
          }
        }
      }
    }
  }
  
  function cargar_cavidad(cavidad_ctgry, amperaje, fusibleColocado, orientacion, image, ctx, cavidadx, cavidady, cavidadw, cavidadh) {
    image.onload = function () {
      var pat = ctx.createPattern(image, 'no-repeat');
      ctx.fillStyle = pat;
      getDistance(cavidadx, cavidady, cavidadw, cavidadh);
      ctx.drawImage(image, cavidadx, cavidady, xDistance, yDistance);
      //console.log(`static/content/fusibles/${cavidad_ctgry},${amperaje},${fusibleColocado}${orientacion}.jpg`)
    }
  }
  
  function restaurar(ctx, img, variante, actual_caja) {
  
    img.src =`static/content/cajas/${tipoArnes}/${actual_caja}/${variante}.jpg`;
    ctx.drawImage(img, 0, 0, imgWidth, imgHeight);
    //var datosimagen = ctx.getImageData(0, 0, imgWidth, imgHeight);
    //var datos = datosimagen.data;
    // for (var i = 0; i < datos.length; i++) {
    //   datos[i] = datosPrim[i];
    //   datos[i + 1] = datosPrim[i + 1];
    //   datos[i + 2] = datosPrim[i + 2];
    // }
    // ctx.putImageData(datosimagen, 0, 0);
  }
  
  
  
  
  // ToolTip (metodo canvas para mostrar un mensaje en la imagen con los fusibles)
  function ToolTip(img, text, width, change) {
  //console.log(change);
    const variante = change.getVariante();
    const mayusVariante = change.getMayusVariante();
    const actual_caja = change.getCaja();
    const mayusCaja = change.getMayusCaja();
  
  
    var me = this, // self-reference for event handlers
      div = document.createElement("div"), // the tool-tip div
      
      parent = img.parentNode, // parent node for img
      visible = false; // current status
      div.id ='tooltip'
    // show the tool-tip
    this.show = function (pos) {
      if (!visible) { // ignore if already shown (or reset time)
        visible = true; // lock so it's only shown once
        setDivPos(pos); // set position
        if (!document.getElementById('tooltip')) {
          
          parent.appendChild(div); // add to parent of img
        }
      }
    }
    // hide the tool-tip
    function hide() {
      visible = false; // hide it after timeout
      if (parent.contains(div)) {
        parent.removeChild(div); // remove from DOM
      }
    }
    
    console.log(fuses_BB, mayusCaja);
    
    let keys_cavidad = Object.keys(fuses_BB[mayusCaja]);
    // console.log("KEYS DE PDCS: ",keys_cavidad);
    let cavidad, amperaje;
    // check mouse position, add limits as wanted... just for example:
    function check(e) {
      if (parent.contains(div)) {
        hide();
      }
      var pos = getPos(e),
        posAbs = {
          x: e.clientX,
          y: e.clientY
        }; // div is fixed, so use clientX/Y


        keys_cavidad.forEach(cavidad => {
        
      

      //for (i = 1; i < keys_cavidad.length + 1; i++) {
        let fusible_tooltip;
        
        
        //console.log(fuses_BB[mayusCaja][cavidad]);
        if (!visible && pos.x >= fuses_BB[mayusCaja][cavidad][0][0] && pos.x <= fuses_BB[mayusCaja][cavidad][1][0] && pos.y >= fuses_BB[mayusCaja][cavidad][0][1] && pos.y <= fuses_BB[mayusCaja][cavidad][1][1]) {
          //console.log(fuse_inserted);          // set some initial styles, can be replaced by class-name etc.
          div.style.cssText = "position:fixed;padding:7px;font-weight: bold;color:#000;background:rgba(51, 255, 252, 0.6);pointer-events:none;width:" + width + "px";
                   
           if (modularity) {
             
             var isTorque = mayusVariante.includes('_torque');
             var wichBox = isTorque? 'torque' : 'vision';
             var box = isTorque? mayusVariante.replace('_torque','') : mayusVariante;
             var isMfbeM = mayusVariante.includes('MFB-E_M');
             box = isMfbeM? box.replace('E_M','E') : box;
             var keys = Object.keys(modularity[wichBox])
             // Filtrar las claves que contienen 'PDC-R' y verificar si alguna tiene contenido desde una cadena de metodos
             const contenidoOriginal = keys
                 // Filtrar las claves que contienen la cadena 'PDC-R'
                 .filter(key => key.includes(PDC))
                 // Filtrar las claves que contengan COVER
                 .filter(key => !key.includes('COVER'))
                 // Mantener solo las claves que tienen propiedades internas (contenido)
                 .filter(key => Object.keys(modularity[wichBox][key]).length > 0);
              
              if (mayusCaja.includes(PDC) && !mayusCaja.includes('COVER')  &&  contenidoOriginal[0] !== modularity['variante']) {
                  console.log('Del Orignal',contenidoOriginal[0], 'a',box);

                  box = contenidoOriginal[0];
                  
              }   
            
            


             
             


            

            //console.log(modularity['vision']);
            
             

             const indexBox = box_array[mayusVariante].indexOf(cavidad)
             const indexModularity = Object.keys(modularity[wichBox][box])
             const found =  indexModularity.find((element) => element.includes(box_array[mayusVariante][indexBox]));
             //console.log(box_array[mayusVariante],cavidad,modularity[wichBox][box][found], found);
             var fuse_inserted = modularity[wichBox][box][found] ? modularity[wichBox][box][found][1]:'N/A';
           }


          if (fuses_value[mayusVariante][cavidad] == "vacio" /* && fuse_inserted === "vacio" */) {
            fusible_tooltip =  modularity? fuses_value[mayusVariante][cavidad]: "Vacío";
          } 
          else {
                       //fusible_tooltip = fuses_value[mayusCaja][cavidad];
            
              fusible_tooltip = fuses_value[mayusVariante][cavidad];
              
          
           }
          switch (fusible_tooltip) {
            case 'beige':
                amperaje = '5 A';
                break;
            case 'cafe':
                amperaje = '7.5 A';
                break;
            case 'azul':
                amperaje = '15 A';
                break;
            case 'amarillo':
                amperaje = '20 A';
                break;
            case 'verde':
                amperaje = '30 A';
                break;
            case 'naranja':
                amperaje = '40 A';
                break;
            case 'natural':
                amperaje = '25 A';
                break;
            case 'rojo':
                if (fuses_types[mayusCaja][cavidad] === "MAXI") {
                    amperaje = '50 A';
                } else {
                    amperaje = '10 A';
                }
                break;
            case "1008695":
                amperaje = '60 A' //Rosa
                break;
            case "1010733":
                amperaje = '70 A' //Gris
                break;
            default:
                amperaje = 'N/A';
                category = ''
                break;
          }
          let unidad = amperaje === 'N/A' ? 'N/A' : amperaje + ' Amps';
          div.innerHTML = fuse_inserted? `Cavidad: ${cavidad}<br>Fusible: ${fusible_tooltip}<br>Amperaje: ${unidad} <br>Modulo: ${fuse_inserted}` : `Cavidad: ${cavidad}<br>Valor: ${fusible_tooltip}<br>Amperaje: ${unidad}`;
          me.show(posAbs); // show tool-tip at this pos
        } else setDivPos(posAbs);
       
        // otherwise, update position
      });
    }
    // get mouse position relative to img
    function getPos(e) {
      var r = img.getBoundingClientRect();
      return {
        x: e.clientX - r.left,
        y: e.clientY - r.top
      }
    }
    // update and adjust div position if needed (anchor to a different corner etc.)
    function setDivPos(pos) {
      if (visible) {
        if (pos.x < 0) pos.x = 0;
        if (pos.y < 0) pos.y = 0;
        // other bound checks here
        div.style.left = pos.x + "px";
        div.style.top = pos.y + "px";
      }
    }
    // we need to use shared event handlers:
    img.addEventListener("mousemove", check);
    img.addEventListener("click", check);
    $(document).on('wheel', function () {
      hide();
    });
  }

  function getDistance(x1, y1, x2, y2) {
    xDistance = x2 - x1;
    yDistance = y2 - y1;
    // console.log("Distancia en X: ",xDistance);
    // console.log("Distancia en Y: ",yDistance);
  }



///Seccion de Botones para colocar en las cajas
$("#mini_beige").on("click", function () {
  color = "beige";
  color_style = "#FFD700";
  console.log("Color seleccionado: ", color)
  ctgry = "MINI"
});
$("#mini_cafe").on("click", function () {
  color = "cafe";
  color_style = "#8B4513";
  console.log("Color seleccionado: ", color)
  ctgry = "MINI"
});
$("#mini_rojo").on("click", function () {
  color = "rojo";
  color_style = "#FF0000";
  console.log("Color seleccionado: ", color)
  ctgry = "MINI"
});
$("#mini_azul").on("click", function () {
  color = "azul";
  color_style = "#0000FF";
  console.log("Color seleccionado: ", color)
  ctgry = "MINI"
});
$("#ato_cafe").on("click", function () {
  color = "cafe";
  color_style = "#8B4513";
  console.log("Color seleccionado: ", color)
  ctgry = "ATO"
});
$("#ato_beige").on("click", function () {
  color = "beige";
  color_style = "#008000";
  console.log("Color seleccionado: ", color)
  ctgry = "ATO"
});
$("#ato_verde").on("click", function () {
  color = "verde";
  color_style = "#008000";
  console.log("Color seleccionado: ", color)
  ctgry = "ATO"
});
$("#ato_azul").on("click", function () {
  color = "azul";
  color_style = "#0000FF";
  console.log("Color seleccionado: ", color)
  ctgry = "ATO";
});
$("#ato_natural").on("click", function () {
  color = "natural";
  color_style = "#FFFFFF";
  console.log("Color seleccionado: ", color)
  ctgry = "ATO";
});
$("#ato_amarillo").on("click", function () {
  color = "amarillo";
  color_style = "#FFFF00";
  console.log("Color seleccionado: ", color)
  ctgry = "ATO"
});
$("#ato_rojo").on("click", function () {
  color = "rojo";
  color_style = "#FFFF00";
  console.log("Color seleccionado: ", color)
  ctgry = "ATO"
});

$("#ato_clear_rojo").on("click", function () {
  color = "rojo";
  color_style = "#FFFF00";
  console.log("Color seleccionado: ", color)
  ctgry = "ATO_clear"
});

$("#ato_clear_beige").on("click", function () {
  color = "beige";
  color_style = "#FFFF00";
  console.log("Color seleccionado: ", color)
  ctgry = "ATO_clear"
});

$("#ato_clear_azul").on("click", function () {
  color = "azul";
  color_style = "#FFFF00";
  console.log("Color seleccionado: ", color)
  ctgry = "ATO_clear"
});



$("#maxi_verde").on("click", function () {
  color = "verde";
  color_style = "#008000";
  console.log("Color seleccionado: ", color)
  
  ctgry = "MAXI"
  
});
$("#maxi_naranja").on("click", function () {
  color = "naranja";
  color_style = "#FFA500";
  console.log("Color seleccionado: ", color)
  ctgry = "MAXI"
  
});
$("#maxi_rojo").on("click", function () {
  color = "rojo";
  color_style = "#FF0000";
  console.log("Color seleccionado: ", color)
  
  ctgry = "MAXI"
  
});
$("#relx").on("click", function () {
  color = "1008695";
  color_style = "#FF00FF";
  console.log("Color seleccionado: ", color)
  
  ctgry = "RELAY"
  
});
$("#relt").on("click", function () {
  color = "1010733";
  color_style = "#A9A9A9";
  console.log("Color seleccionado: ", color)
  ctgry = "RELAY"
  
});

$("#multi_beige").on("click", function() {
  color = "beige";
  color_style = "#FFD700";
  console.log("Color seleccionado: ", color)
  ctgry = "MULTI";
  console.log("Caja seleccionada", caja);
});

$("#multi_cafe").on("click", function() {
  color = "cafe";
  color_style = "#8B4513";
  console.log("Color seleccionado: ", color)
  ctgry = "MULTI";
  console.log("Caja seleccionada", caja);
});

//BOTONES DE TORQUE
$("#terminal_default").on("click", function() {
  color = true;
  color_style = "green";
  console.log("Terminal seleccionado: ", color)
  ctgry = "TERMINAL";
});

$("#terminal_A").on("click", function() {
  color = "a";
  color_style = "yellow";
  console.log("Terminal seleccionado: ", color)
  ctgry = "TERMINAL";
});

$("#terminal_B").on("click", function() {
  color = "b";
  color_style = "orange";
  console.log("Terminal seleccionado: ", color)
  ctgry = "TERMINAL";
});

$("#terminal_C").on("click", function() {
  color = "c";
  color_style = "red";
  console.log("Terminal seleccionado: ", color)
  ctgry = "TERMINAL";
});

$("#terminal_D").on("click", function() {
  color = "d";
  color_style = "blue";
  console.log("Terminal seleccionado: ", color)
  ctgry = "TERMINAL";
});



$("#eliminar").on("click", function () {
  color = "eliminar";
  color_style = "#A9A9A9";
  console.log("Color seleccionado: ", color)
  ctgry = "RELAY"
  
});

